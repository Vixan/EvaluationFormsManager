// <auto-generated />
using EvaluationFormsManager.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EvaluationFormsManager.Persistence.EF.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180509134636_DataContext")]
    partial class DataContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvaluationFormsManager.Domain.Criteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<int?>("SectionId");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.EvaluationScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EvaluationScale");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.EvaluationScaleOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int?>("EvaluationScaleId");

                    b.Property<string>("Name");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationScaleId");

                    b.ToTable("EvaluationScaleOption");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int?>("ImportanceId");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ImportanceId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Importance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Importance");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<int?>("EvaluationScaleId");

                    b.Property<int?>("FormId");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationScaleId");

                    b.HasIndex("FormId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Criteria", b =>
                {
                    b.HasOne("EvaluationFormsManager.Domain.Section")
                        .WithMany("Criteria")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.EvaluationScaleOption", b =>
                {
                    b.HasOne("EvaluationFormsManager.Domain.EvaluationScale", "EvaluationScale")
                        .WithMany("EvaluationScaleOptions")
                        .HasForeignKey("EvaluationScaleId");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Form", b =>
                {
                    b.HasOne("EvaluationFormsManager.Domain.Importance", "Importance")
                        .WithMany()
                        .HasForeignKey("ImportanceId");
                });

            modelBuilder.Entity("EvaluationFormsManager.Domain.Section", b =>
                {
                    b.HasOne("EvaluationFormsManager.Domain.EvaluationScale", "EvaluationScale")
                        .WithMany()
                        .HasForeignKey("EvaluationScaleId");

                    b.HasOne("EvaluationFormsManager.Domain.Form")
                        .WithMany("Sections")
                        .HasForeignKey("FormId");
                });
#pragma warning restore 612, 618
        }
    }
}
